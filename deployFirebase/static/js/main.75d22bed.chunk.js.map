{"version":3,"sources":["shared/firebase.js","redux-toolkit/modules/qnaList.js","redux-toolkit/modules/fishList.js","redux-toolkit/modules/users.js","redux-toolkit/configureStore.js","elements/Text.js","elements/Grid.js","elements/Button.js","data/background.jpg","pages/Main.js","data/questionsFB.js","components/QuizFrame.js","components/QuizWrap.js","pages/Quiz.js","data/gwangeo.png","components/Fish.js","pages/Result.js","shared/App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","qnaList_db","storage","collection","quizSlice","createSlice","name","initialState","is_loading","qna_list","reducers","setLoading","state","action","payload","setQnaList","qnaList_data","shuffleArray","arr","randomIndex","currentIndex","length","Math","floor","random","actions","api","dispatch","a","get","then","docs","forEach","doc","index","exists","id","data","fishList_db","fishSlice","is_loaded","onefish_result","setLoaded","setFishResult","resultType","type","countUsers_db","userSlice","total_users","addUserCnt","increment","FieldValue","update","count","history","createBrowserHistory","rootReducer","combineReducers","qnaList","Quiz","fishList","Fish","users","User","router","connectRouter","middlewares","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","middleware","devTools","process","Text","props","children","size","lineHeight","bold","margin","styles","align","TextBox","defaultProps","styled","div","Grid","width","height","padding","is_flex","justify","textAlign","zIndex","overflow","column","GridBox","isRoot","opacity","Button","round","onClick","text","color","Btn","button","Wrap","bg","Title","Main","push","dic","0","1","2","3","4","5","6","7","incrementDicElement","QuestionBox","QuizFrame","questionNum","toString","question","next","answers","CheckOutlined","res","b","SpinWrap","ProgressBar","Progressing","QuizWrap","useDispatch","useSelector","useEffect","quizActions","useState","incrementIndex","goToResultPage","getType","types","answer","i","join","sessionStorage","setItem","fishActions","userActions","replace","window","alert","Object","values","FishImg","img","playState","OneFishType","feature","potential","sentence","fishType","mbti","fish","desc","traits","potentials","useMemo","memoPlayTimes","setPlayTimes","_pState","setPState","Helmet","charSet","property","content","rel","href","src","gwangeo","console","log","setTimeout","map","t","idx","p","Other","NoData","Result","fish_result","Kakao","init","target","title","document","createElement","value","body","appendChild","select","execCommand","removeChild","Link","sendScrap","requestUrl","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.75d22bed.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebseConfig = {\r\n    apiKey: \"AIzaSyDtw-bguzY71ypg6qqozSmZvs-LJG0yuy8\",\r\n    authDomain: \"mbtifish.firebaseapp.com\",\r\n    projectId: \"mbtifish\",\r\n    storageBucket: \"mbtifish.appspot.com\",\r\n    messagingSenderId: \"625933522614\",\r\n    appId: \"1:625933522614:web:7e57535c575d175994f817\",\r\n    measurementId: \"G-Q81GZL6THG\"\r\n};\r\n\r\nfirebase.initializeApp(firebseConfig);\r\n\r\n//firestore에 있는 인스턴스를 변수 firestore에 넣어놓고 갖다쓰자\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport {firestore, storage};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { firestore } from \"../../shared/firebase\";\r\n\r\nconst qnaList_db = firestore.collection(\"qnaList\");\r\n\r\nconst quizSlice = createSlice({\r\n  name: \"quiz\",\r\n  initialState: {\r\n    is_loading: true,\r\n    qna_list: [],\r\n  },\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.is_loading = action.payload;\r\n    },\r\n    setQnaList : (state, action) => {\r\n      state.qna_list = action.payload;\r\n      state.is_loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nlet qnaList_data = [];\r\n\r\n//FB통신함수\r\nconst getQnaListFB = () => {\r\n  return async function (dispatch) {\r\n    \r\n    dispatch(setLoading(true));\r\n\r\n    await qnaList_db.get().then((docs) => {\r\n      \r\n      docs.forEach((doc, index) => {\r\n        if (doc.exists) {\r\n            qnaList_data = [...qnaList_data, { index: index, id: doc.id, ...doc.data()}];\r\n          }\r\n        });\r\n        return shuffleArray(qnaList_data)\r\n      });\r\n      dispatch(setQnaList(qnaList_data))\r\n  }\r\n}\r\n\r\n//qnaList_data -> 랜덤배열로\r\nfunction shuffleArray(arr) {\r\n    let currentIndex = arr.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [arr[currentIndex], arr[randomIndex]] = [\r\n        arr[randomIndex], arr[currentIndex]];\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const { setQnaList, setLoading } = quizSlice.actions;\r\n\r\nexport const api = {\r\n  getQnaListFB,\r\n};\r\n\r\nexport default quizSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { firestore } from \"../../shared/firebase\";\r\n\r\nconst fishList_db = firestore.collection(\"fishList\");\r\n\r\nconst fishSlice = createSlice({\r\n  name: \"fish\",\r\n  initialState: {\r\n    is_loaded : false,\r\n    onefish_result: {},\r\n  },\r\n  reducers: {\r\n    setLoaded : (state, action) => {\r\n      state.is_loaded = action.payload;\r\n    },\r\n    setFishResult : (state, action) => {\r\n      state.onefish_result = action.payload;\r\n      state.is_loaded = false;\r\n    },\r\n  },\r\n});\r\n\r\n//FB통신함수\r\n//퀴즈페이지에서 받은 도출한 값(resultType)과 동일한 type의 인덱스 찾아오기\r\nconst getOneFishFB = (resultType) => {\r\n  return function (dispatch) {\r\n    dispatch(setLoaded(true));\r\n    fishList_db.get().then((docs) => {\r\n\r\n      docs.forEach((doc, index) => {\r\n        if (doc.exists && doc.data().type === resultType) {\r\n          dispatch(setFishResult(doc.data()));\r\n            }\r\n        });\r\n    })\r\n  }\r\n}\r\n\r\nexport const { setFishResult, setLoaded } = fishSlice.actions;\r\n\r\nexport const api = {\r\n  getOneFishFB,\r\n};\r\n\r\nexport default fishSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { firestore } from \"../../shared/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst countUsers_db = firestore.collection(\"countUsers_test\");\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    total_users:\"\",\r\n  },\r\n  reducers: {\r\n    addUserCnt : (state, action) => {\r\n      state.total_users = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n//총 참여자수 \r\nconst getTotalUserCntFB = () => {\r\n  return function (dispatch) {\r\n\r\n    countUsers_db.get()\r\n    .then((docs) => {\r\n      let userTypeCnt_data = [];\r\n      \r\n      docs.forEach((doc) => {\r\n        if (doc.exists) {\r\n          userTypeCnt_data = [...userTypeCnt_data, { id: doc.id, ...doc.data()}];\r\n            }\r\n        });\r\n        const number_test = userTypeCnt_data.reduce((acc,cur) => {\r\n          return acc+cur.count;\r\n        },0);\r\n        dispatch(addUserCnt(number_test));\r\n      })\r\n    }\r\n  }\r\n\r\n//FB통신함수\r\n//결과로 나온 Type의 카운트를 +1 업데이트 해주는 함수\r\nconst addUserTypeFB = (resultType) => {\r\n  \r\n  return function (dispatch) {\r\n    \r\n    const increment = firebase.firestore.FieldValue.increment(1);\r\n    countUsers_db.doc(resultType).update({count:increment});\r\n    }\r\n  }\r\n\r\nexport const { addUserCnt } = userSlice.actions;\r\n\r\nexport const api = {\r\n  addUserTypeFB,\r\n  getTotalUserCntFB,\r\n};\r\n\r\nexport default userSlice.reducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport Quiz from \"./modules/qnaList\";\r\nimport Fish from \"./modules/fishList\";\r\nimport User from \"./modules/users\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  qnaList: Quiz,\r\n  fishList: Fish,\r\n  users:User,\r\n  router: connectRouter(history),\r\n});\r\n\r\nconst middlewares = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  })\r\n]\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nlet store = configureStore({ \r\n  reducer: rootReducer, \r\n  middleware: middlewares,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = (props) => {\r\n  const { children, size, lineHeight, bold, margin, align } = props;\r\n\r\n  const styles = {\r\n    size: size,\r\n    lineHeight: lineHeight,\r\n    bold: bold ? bold : false,\r\n    margin: margin ? margin : false,\r\n    align: align,\r\n  };\r\n\r\n  return <TextBox {...styles}>{children}</TextBox>;\r\n};\r\n\r\nText.defaultProps = {\r\n  children: null,\r\n  size: \"20px\",\r\n  lineHeight: \"120%\",\r\n  align: \"center\",\r\n};\r\n\r\nconst TextBox = styled.div`\r\n  font-size: ${(props) => props.size};\r\n  font-weight: ${(props) => (props.bold ? \"700\" : \"500\")};\r\n  ${(props) => (props.lineHeight ? `line-height:${props.lineHeight};` : \"\")}\r\n  margin:${(props) => props.margin};\r\n  text-align: ${(props) => props.align};\r\n`;\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Grid = (props) => {\r\n  const { children, width, height, padding, is_flex, margin, justify, align, textAlign, zIndex, overflow, column } = props;\r\n\r\n  const styles = {\r\n    width: width,\r\n    height: height,\r\n    padding: padding,\r\n    is_flex: is_flex,\r\n    margin: margin,\r\n    justify: justify,\r\n    align: align,\r\n    textAlign: textAlign,\r\n    zIndex: zIndex,\r\n    overflow: overflow,\r\n    column: column,\r\n  };\r\n\r\n  return <GridBox {...styles}>{children}</GridBox>;\r\n};\r\n\r\nGrid.defaultProps = {\r\n  isRoot: false,\r\n  children: null,\r\n  width: null,\r\n  height: null,\r\n  padding: false,\r\n  is_flex: false,\r\n  margin: false,\r\n  justify: false,\r\n  align: false,\r\n  textAlign: false,\r\n  zIndex: false,\r\n  overflow: null,\r\n  column: false,\r\n};\r\n\r\nconst GridBox = styled.div`\r\n  svg {\r\n    cursor: pointer;\r\n  }\r\n  box-sizing: border-box;\r\n  outline: 0;\r\n  /* white-space: pre-line; */\r\n\r\n  width: ${(props) => (props.width ? props.width : \"\")};\r\n  height: ${(props) => (props.height ? props.height : \"\")};\r\n\r\n  z-index: ${(props) => props.zIndex};\r\n  overflow: ${(props) => props.overflow};\r\n\r\n  padding: ${(props) => props.padding};\r\n  margin: ${(props) => props.margin};\r\n  opacity: ${(props) => (props.opacity ? props.opacity : \"\")};\r\n\r\n  justify-content: ${(props) => (props.justify ? props.justify : \"\")};\r\n  align-items: ${(props) => (props.align ? props.align : \"\")};\r\n\r\n  ${(props) => (props.is_flex ? `display:flex; align-items: center;` : \"\")};\r\n\r\n  ${(props) => (props.column ? `flex-direction: column;` : `flex-direction: row;`)}\r\n\r\n  text-align: ${(props) => props.textAlign};\r\n`;\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = (props) => {\r\n  // disabled : 비활성화 모드\r\n  // attributes\r\n  const { round, onClick, text, children, width, height, margin, size, align, padding, color } = props;\r\n  const styles = { onClick: onClick, text: text, width: width, height: height, margin: margin, size: size, align: align, padding: padding, color: color };\r\n\r\n  if (round) {\r\n    return (\r\n      <>\r\n        <Btn round {...styles}>\r\n          {text ? text : children}\r\n        </Btn>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Btn {...styles}>{text ? text : children}</Btn>\r\n    </>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  children: \"Grrr\",\r\n  onClick: () => {},\r\n};\r\n\r\nconst Btn = styled.button`\r\n  user-select: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: 1.5px solid #ffffff66;\r\n  border-radius: 50rem;\r\n\r\n  background-color: ${(props) => (props.color ? props.color : \"#ffffff44\")}; // 60%\r\n  color: #ffffff;\r\n  font-size: ${(props) => (props.size ? props.size : \"20px\")};\r\n  font-weight: 600;\r\n  text-align: ${(props) => (props.align ? \"left\" : \"center\")};\r\n\r\n  margin: ${(props) => (props.margin ? props.margin : \"10px\")};\r\n  height: 50px;\r\n  min-width: 50%;\r\n\r\n  padding: ${(props) => (props.padding ? props.padding : \"0 6px\")};\r\n  box-shadow: 0 0 0 3px #ffffff00;\r\n  ${(props) => (props.round ? \"height: 50px;  min-width: 50px; max-width: 50px; overflow:hidden;\" : \"height: 50px;  min-width: 50%;\")}\r\n\r\n  &:active {\r\n    border: 1.5px solid #ffffff88;\r\n    box-shadow: 0 0 2px 2px #ffffff66;\r\n    transition: all 200ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/background.12b2c4de.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Button } from \"../elements/\";\r\nimport bg from \"../data/background.jpg\";\r\n\r\nconst Main = ({ history }) => {\r\n  return (\r\n    <Wrap>\r\n      <Title>\r\n        수면 아래\r\n        <br />\r\n        나의 본 모습은?\r\n      </Title>\r\n\r\n      <Text size=\"18px\">나도 모르는 나의 무의식 테스트</Text>\r\n\r\n      <Button margin=\"220px auto auto\" onClick={() => history.push(\"/quiz\")}>\r\n        START\r\n      </Button>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  width: 100vw;\r\n  // height: 100vh;\r\n  /* max-width: 375px; */\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  padding: 20vh 10px 5vh 10px;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default Main;\r\n","\r\nexport let dic = {\r\n    0: 0,\r\n    1: 0,\r\n    2: 0,\r\n    3: 0,\r\n    4: 0,\r\n    5: 0,\r\n    6: 0,\r\n    7: 0\r\n}\r\n\r\nexport let result = \"\";\r\n\r\nexport const updateResult = (str) => {\r\n    result = str;\r\n}\r\n\r\nexport const incrementDicElement = (type) => {\r\n    if (type === \"E\") {\r\n        dic[0] += 1;\r\n    }\r\n    else if (type === \"I\") {\r\n        dic[1] += 1;\r\n    }\r\n    else if (type === \"N\") {\r\n        dic[2] += 1;\r\n    }\r\n    else if (type === \"S\") {\r\n        dic[3] += 1;\r\n    }\r\n    else if (type === \"T\") {\r\n        dic[4] += 1;\r\n    }\r\n    else if (type === \"F\") {\r\n        dic[5] += 1;\r\n    }\r\n    else if (type === \"P\") {\r\n        dic[6] += 1;\r\n    }\r\n    else if (type === \"J\") {\r\n        dic[7] += 1;\r\n    }\r\n    \r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Grid, Button } from \"../elements/\";\r\nimport {CheckOutlined} from \"@ant-design/icons\";\r\nimport bg from \"../data/background.jpg\";\r\n\r\nconst QuizFrame = (props) => {\r\n  let questionNum = \"\";\r\n\r\n  if (props.index < 10) {\r\n    questionNum = \"0\" + props.index?.toString();\r\n  }\r\n  else {\r\n    questionNum = props.index?.toString();\r\n  }\r\n\r\n  return (<Grid textAlign=\"center\">\r\n  <Grid margin=\"150px auto 100px auto\">\r\n    <Text size=\"100px\" bold lineHeight=\"120%\">{questionNum}</Text>\r\n    <br/>\r\n    <Text size=\"30px\" bold>{props.data?.question}</Text>\r\n  </Grid>\r\n  <QuestionBox>\r\n    <Button align padding=\"0 20px\" size=\"24px\" \r\n    onClick={()=> {\r\n      props?.next(); \r\n      props?.increment(props.data?.answers.a.type);}}>\r\n        <CheckOutlined /> \r\n        {props.data?.answers.a.res}\r\n    </Button>\r\n    <Button align padding=\"0 20px\" size=\"24px\" \r\n    onClick={()=> {\r\n      props?.next(); \r\n      props?.increment(props.data?.answers.b.type);}}>\r\n        <CheckOutlined /> \r\n        {props.data?.answers.b.res}\r\n    </Button>\r\n  </QuestionBox>\r\n</Grid>);\r\n};\r\n\r\nconst QuizWrap = styled.div`\r\n  width: 100vw;\r\n  /* height: 100vh; */\r\n  /* max-width: 375px; */\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat, repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst QuestionBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport default QuizFrame;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { dic, incrementDicElement } from \"../data/questionsFB\";\r\nimport QuizFrame from \"../components/QuizFrame\";\r\nimport { api as quizActions } from \"../redux-toolkit/modules/qnaList\";\r\nimport { api as fishActions } from \"../redux-toolkit/modules/fishList\";\r\nimport { api as userActions } from \"../redux-toolkit/modules/users\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst QuizWrap = (props) => {\r\n  const history = props.history;\r\n  const dispatch = useDispatch();\r\n  const is_loading = useSelector((state) => state.qnaList.is_loading);\r\n  const qna_list = useSelector((state) => state.qnaList.qna_list);\r\n\r\n  useEffect(() => {\r\n    dispatch(quizActions.getQnaListFB());\r\n  }, []);\r\n\r\n  const [index, incrementIndex] = useState(1);\r\n\r\n  const goToNextPage = () => {\r\n    if (index === 12) {\r\n      window.alert(\"결과보기\");\r\n      goToResultPage();\r\n      getType(Object.values(dic));\r\n      return;\r\n    }\r\n    incrementIndex(index + 1);\r\n  };\r\n\r\n  const goToResultPage = () => {\r\n    history.push(\"/result\");\r\n  };\r\n\r\n  const getType = (arr) => {\r\n    const types = [\"E\", \"I\", \"N\", \"S\", \"T\", \"F\", \"P\", \"J\"];\r\n    let answer = [];\r\n\r\n    for (let i = 0; i < arr.length; i += 2) {\r\n      if (arr[i] > arr[i + 1]) {\r\n        answer.push(types[i]);\r\n        continue;\r\n      }\r\n      answer.push(types[i + 1]);\r\n    }\r\n    let resultType = answer.join(\"\");\r\n    //유저의 타입에 맞는 물고기 유형 FB에서 불러오기\r\n    sessionStorage.setItem('fish', resultType);\r\n    dispatch(fishActions.getOneFishFB(resultType));\r\n    dispatch(userActions.addUserTypeFB(resultType)); //FB에 해당타입 카운트+1\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {is_loading ? (\r\n        <SpinWrap>\r\n          <Spin />\r\n        </SpinWrap>\r\n      ) : (\r\n        <>\r\n          <button onClick={() => history.replace(\"/\")}>Home</button>\r\n          <ProgressBar>\r\n            <Progressing index={index} />\r\n          </ProgressBar>\r\n          {qna_list && <QuizFrame data={qna_list[index - 1]} next={goToNextPage} index={index} increment={incrementDicElement} />}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SpinWrap = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  width: 80vw;\r\n  height: 20px;\r\n  background: white;\r\n  border-radius: 12px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Progressing = styled.div`\r\n  position: absolute;\r\n  height: 20px;\r\n  width: ${(props) => (props.index ? `${(props.index / 12) * 100}%` : \"0%\")};\r\n  background: blue;\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport default QuizWrap;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport QuizWrap from \"../components/QuizWrap\";\r\nimport bg from \"../data/background.jpg\";\r\n\r\n\r\nconst Quiz = (props) => {\r\n  return (\r\n    <Wrap>\r\n      <QuizWrap {...props} />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  width: 100vw;\r\n  /* height: 100vh; */\r\n  /* max-width: 375px; */\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat, repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default Quiz;\r\n","export default __webpack_public_path__ + \"static/media/gwangeo.739563c5.png\";","import React, { useMemo, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Grid } from \"../elements/\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport gwangeo from \"../data/gwangeo.png\";\r\n\r\nconst Fish = (props) => {\r\n  const {\r\n    OneFishType: { feature, potential, name, sentence },\r\n  } = props;\r\n\r\n  const fishType = {\r\n    INFP: {\r\n      mbti: \"INFP\",\r\n      fish: \"하늘을 나는 돌고래\",\r\n      desc: \"나에겐 아름다운 이상이 있지\",\r\n      img: \"https://www.ocregister.com/wp-content/uploads/migration/nv5/nv5t87-b88521891z.120150923191922000g6tc6j8f.70.jpg\",\r\n      traits: [\r\n        \"다른 사람들과 구분되는 독특한 감수성이 있어요.\",\r\n        \"맞는 건 맞고 아닌 건 아닌거에요. 하지만 이걸 대놓고 말하고 다니진 않아요.\",\r\n        \"따뜻한 마음을 가지고 있지만 애정표시를 대놓고 하는 건 참 어려워요.\",\r\n        \"가식적인 사람이 싫어요, 의도가 불투명해 보이면 심리적인 거리를 유지해요\",\r\n      ],\r\n      potentials: [\r\n        \"책과 언어에 대한 능력이 뛰어나요. 뛰어난 작가가 될 가능성이 있어요.\",\r\n        \"가끔 고지식한 사람으로 오해받지만, 사실은 누구보다 새로운 아이디어에 대한 수용력이 강해요.\",\r\n        \"내가 느낀 감정을 다른 사람들과 적극적으로 공유하는 게 능력개발에 도움이 될 수 있어요.\",\r\n      ],\r\n    },\r\n    ENFP: {},\r\n  };\r\n\r\n  let playTimes = 0;\r\n  let [memoPlayTimes, setPlayTimes] = useState(useMemo(() => playTimes, [playTimes]));\r\n\r\n  const [_pState, setPState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPState(true);\r\n    return () => setPState(false);\r\n  }, [memoPlayTimes]);\r\n\r\n  const touchFish = () => {\r\n    if (memoPlayTimes >= 5) {\r\n      alert(\"이젠 활어가 아니에요...\");\r\n      return;\r\n    }\r\n\r\n    setPlayTimes((memoPlayTimes += 1));\r\n    console.log(memoPlayTimes);\r\n\r\n    if (memoPlayTimes === 1) {\r\n      alert(\"아얏!\");\r\n    } else if (memoPlayTimes === 3) {\r\n      alert(\"자꾸 만지면 신선도가 떨어져요 😥\");\r\n    }\r\n\r\n    if (_pState === false) {\r\n      setPState(true);\r\n    } else {\r\n      setPState(false);\r\n      return setTimeout(() => {\r\n        setPState(true);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta property=\"og:title\" content={`${fishType.INFP.fish} | 도시어부`} />\r\n        <meta property=\"og:image\" content=\"\" />\r\n        <meta property=\"og:description\" content=\"수면 아래 내 모습은 어떤 모습일지 확인해보세요!\" />\r\n        <title>{`${name && name} | 도시어부`}</title>\r\n        {/* 뒷주소 이름은 뭘로 할지 결정해야함 ex. mbti타입인지, fish타입인지 */}\r\n        <link rel=\"canonical\" href={`http://localhost:3000/result/${fishType.INFP.fish}`} />\r\n      </Helmet>\r\n      <Text bold size=\"32px\" margin=\"20px 0 0 0\">\r\n        {name && name}\r\n      </Text>\r\n      <FishImg\r\n        src={`${gwangeo}`}\r\n        onClick={touchFish}\r\n        // onAnimationEnd={setPState(false)}\r\n        playState={_pState}\r\n      />\r\n      <Grid margin=\"auto 20px\">\r\n        <Text bold size=\"20px\">\r\n          \"{sentence && sentence}\"\r\n        </Text>\r\n\r\n        <Text bold size=\"20px\" margin=\"20px auto\">\r\n          특징\r\n        </Text>\r\n        {feature &&\r\n          feature.map((t, idx) => {\r\n            return (\r\n              <Text idx={idx} bold size=\"14px\" align=\"left\" margin=\"10px\" lineHeight=\"130%\">\r\n                {t}\r\n              </Text>\r\n            );\r\n          })}\r\n\r\n        <Text bold size=\"20px\" margin=\"20px auto\">\r\n          가능성\r\n        </Text>\r\n        {potential &&\r\n          potential.map((p, idx) => {\r\n            return (\r\n              <Text idx={idx} bold size=\"14px\" align=\"left\" margin=\"10px\" lineHeight=\"130%\">\r\n                {p}\r\n              </Text>\r\n            );\r\n          })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FishImg = styled.img`\r\n  width: 80vw;\r\n  max-width: 400px;\r\n  margin: 5vh 0;\r\n\r\n  @-webkit-keyframes swing {\r\n    20% {\r\n      -webkit-transform: rotate3d(0, 0, 1, 15deg);\r\n    }\r\n    40% {\r\n      -webkit-transform: rotate3d(0, 0, 1, -10deg);\r\n    }\r\n    60% {\r\n      -webkit-transform: rotate3d(0, 0, 1, 5deg);\r\n    }\r\n    80% {\r\n      -webkit-transform: rotate3d(0, 0, 1, -5deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate3d(0, 0, 1, 0deg);\r\n    }\r\n  }\r\n  @-moz-keyframes swing {\r\n    20% {\r\n      -moz-transform: rotate3d(0, 0, 1, 15deg);\r\n    }\r\n    40% {\r\n      -moz-transform: rotate3d(0, 0, 1, -10deg);\r\n    }\r\n    60% {\r\n      -moz-transform: rotate3d(0, 0, 1, 5deg);\r\n    }\r\n    80% {\r\n      -moz-transform: rotate3d(0, 0, 1, -5deg);\r\n    }\r\n    100% {\r\n      -moz-transform: rotate3d(0, 0, 1, 0deg);\r\n    }\r\n  }\r\n  @-o-keyframes swing {\r\n    20% {\r\n      -o-transform: rotate3d(0, 0, 1, 15deg);\r\n    }\r\n    40% {\r\n      -o-transform: rotate3d(0, 0, 1, -10deg);\r\n    }\r\n    60% {\r\n      -o-transform: rotate3d(0, 0, 1, 5deg);\r\n    }\r\n    80% {\r\n      -o-transform: rotate3d(0, 0, 1, -5deg);\r\n    }\r\n    100% {\r\n      -o-transform: rotate3d(0, 0, 1, 0deg);\r\n    }\r\n  }\r\n  @keyframes swing {\r\n    20% {\r\n      transform: rotate3d(0, 0, 1, 15deg);\r\n    }\r\n    40% {\r\n      transform: rotate3d(0, 0, 1, -10deg);\r\n    }\r\n    60% {\r\n      transform: rotate3d(0, 0, 1, 5deg);\r\n    }\r\n    80% {\r\n      transform: rotate3d(0, 0, 1, -5deg);\r\n    }\r\n    100% {\r\n      transform: rotate3d(0, 0, 1, 0deg);\r\n    }\r\n  }\r\n\r\n  -webkit-transform-origin: middle left;\r\n  -moz-transform-origin: middle left;\r\n  -o-transform-origin: middle left;\r\n  transform-origin: middle left;\r\n\r\n  ${(props) =>\r\n    props.playState\r\n      ? \"  -webkit-animation: swing 2s cubic-bezier(0.445, 0.05, 0.55, 0.95);-moz-animation: swing 2s cubic-bezier(0.445, 0.05, 0.55, 0.95);-o-animation: swing 2s cubic-bezier(0.445, 0.05, 0.55, 0.95);animation: swing 2s cubic-bezier(0.445, 0.05, 0.55, 0.95);\"\r\n      : \"\"}\r\n`;\r\n\r\nexport default Fish;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Fish from \"../components/Fish\";\r\nimport { Button } from \"../elements/\";\r\nimport bg from \"../data/background.jpg\";\r\nimport { Spin } from \"antd\";\r\nimport { dic } from \"../data/questionsFB\";\r\n\r\nconst Result = (props) => {\r\n  const fish_result = useSelector((state) => state.fishList.onefish_result);\r\n  const is_loaded = useSelector((state) => state.fishList.is_loaded);\r\n\r\n  //현재 결과페이지의 URL - 도메인/결과 물고기의 usrParam값\r\n  const share_url = \"asdf\";\r\n\r\n  const copyToClipboard = () => {\r\n    let t = document.createElement(\"textarea\");\r\n    t.value = share_url;\r\n    document.body.appendChild(t);\r\n    t.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(t);\r\n    window.alert(\"주소가 복사되었습니다!\");\r\n  };\r\n\r\n  // [카카오톡 공유하기]\r\n  // https://developers.kakao.com/docs/latest/ko/getting-started/sdk-js#init\r\n  // https://developers.kakao.com/docs/latest/ko/message/common\r\n  // 1. index.html에서 script 불러온다.\r\n  // 2. 필수코드 Kakao.init(javascript key)\r\n  // 3. 링크 공유는 문서에서 카카오 메시지로 되어있고,\r\n  //    많은 템플릿 중 sendScrap의 경우 requestUrl과 링크 보낼 당시 url이 일치해야한다.\r\n  useEffect(() => {\r\n    // SDK 사용법에는 Kakao.init~어쩌구로 되어있으나 window 객체 찾아서 설정을 해야함\r\n    window.Kakao.init(\"e31c489577057b521747d2d2be3ce3d5\");\r\n    // 카카오 SDK가 초기화되었는지 확인하는 함수 => console.log로 봐서 true면 초기화 잘되었다는 뜻\r\n    // window.Kakao.isInitialized();\r\n  }, []);\r\n\r\n  const grrrDomain = \"http://localhost:3000\";\r\n  const _grrrDomain = \"https://silver0r.tistory.com/57\";\r\n\r\n  const sendLink = () => {\r\n    window.Kakao.Link.sendScrap({\r\n      requestUrl: `${grrrDomain}/result/`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <br />\r\n      {is_loaded ? (\r\n        <SpinWrap>\r\n          <Spin />\r\n        </SpinWrap>\r\n      ) : Object.values(fish_result).length > 0 ? (\r\n        <>\r\n          <Fish OneFishType={fish_result} />\r\n          <Other></Other>\r\n          <div>페북</div>\r\n          <a target=\"blank\" id=\"sns_facebook\" href={`http://www.facebook.com/share.php?u=${_grrrDomain}&t=나만의생선을확인해보세요!`} title=\"페이스북에 이 페이지 공유하기\">\r\n            <Button round color=\"blue\">\r\n              F\r\n            </Button>\r\n          </a>\r\n\r\n          <Button onClick={copyToClipboard}>공유하기</Button>\r\n          <Button round onClick={sendLink} color=\"yellow\">\r\n            K\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <NoData>\r\n          <Button onClick={() => (window.location.href = \"/\")}>다시 검사해보기</Button>\r\n        </NoData>\r\n      )}\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  width: 100vw;\r\n  /* height: 100vh; */\r\n  /* max-width: 375px; */\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat, repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Other = styled.div``;\r\n\r\nconst NoData = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SpinWrap = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default Result;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { history } from \"../redux-toolkit/configureStore\";\r\nimport { Main, Quiz, Result } from \"../pages\";\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <>\r\n      <ConnectedRouter history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Main}/>\r\n          <Route exact path=\"/quiz\" component={Quiz} />\r\n          <Route exact path=\"/result\" component={Result} />\r\n        </Switch>\r\n      </ConnectedRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./shared/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux-toolkit/configureStore\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}